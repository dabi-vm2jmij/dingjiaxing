<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>com.mqttsnet</groupId>
        <artifactId>thinglinks-modules</artifactId>
        <version>${thinglinks.version}</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>thinglinks-modules-broker</artifactId>

    <description>
        thinglinks-modules-broker broker模块
    </description>

    <properties>
        <!--打包目录-->
        <thinglinks.package.url>D:\thinglinks-server\broker</thinglinks.package.url>
        <!--启动类目录-->
        <thinglinks.mainClass.url>com.mqttsnet.thinglinks.broker.ThingLinksBrokerApplication</thinglinks.mainClass.url>
    </properties>

    <dependencies>

        <!-- SpringCloud Alibaba Nacos -->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
        </dependency>

        <!-- SpringCloud Alibaba Nacos Config -->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
        </dependency>

        <!-- SpringBoot Actuator -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>

        <!-- Mysql Connector -->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

        <!-- thinglinks Common DataSource -->
        <dependency>
            <groupId>com.mqttsnet</groupId>
            <artifactId>thinglinks-common-datasource</artifactId>
            <version>${thinglinks.version}</version>
        </dependency>

        <!-- thinglinks Common DataScope -->
        <dependency>
            <groupId>com.mqttsnet</groupId>
            <artifactId>thinglinks-common-datascope</artifactId>
            <version>${thinglinks.version}</version>
        </dependency>

        <!-- thinglinks Common Swagger -->
        <dependency>
            <groupId>com.mqttsnet</groupId>
            <artifactId>thinglinks-common-swagger</artifactId>
            <version>${thinglinks.version}</version>
        </dependency>

        <!-- TODO  https://github.com/quickmsg/smqtt  V1.1.2   -->
        <dependency>
            <groupId>io.github.quickmsg</groupId>
            <artifactId>smqtt-spring-boot-starter</artifactId>
            <version>1.1.2</version>
            <!-- 去除非必要版本 -->
            <exclusions>
                <exclusion>
                    <groupId>io.github.quickmsg</groupId>
                    <artifactId>smqtt-ui</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.projectreactor</groupId>
            <artifactId>reactor-core</artifactId>
            <version>3.4.9</version>
        </dependency>

        <dependency>
            <groupId>io.projectreactor.netty</groupId>
            <artifactId>reactor-netty</artifactId>
            <version>1.0.10</version>
        </dependency>
        <!-- thinglinks API Link -->
        <dependency>
            <groupId>com.mqttsnet</groupId>
            <artifactId>thinglinks-api-link</artifactId>
            <version>${thinglinks.version}</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <!--打包jar-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <!--                    &lt;!&ndash;不打包资源文件&ndash;&gt;-->
                    <excludes>
                        <exclude>*.**</exclude>
                        <exclude>*/*.xml</exclude>
                    </excludes>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <!--MANIFEST.MF 中 Class-Path 加入前缀-->
                            <classpathPrefix>../lib/</classpathPrefix>
                            <!--jar包不包含唯一版本标识-->
                            <useUniqueVersions>false</useUniqueVersions>
                            <!--指定入口类-->
                            <mainClass>${thinglinks.mainClass.url}</mainClass>
                        </manifest>
                        <manifestEntries>
                            <!--MANIFEST.MF 中 Class-Path 加入资源文件目录-->
                            <Class-Path>./resources/</Class-Path>
                        </manifestEntries>
                    </archive>
                    <outputDirectory>${thinglinks.package.url}</outputDirectory>
                </configuration>
            </plugin>

            <!--拷贝依赖 copy-dependencies-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>
                                ${thinglinks.lib.package.url}
                            </outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--拷贝资源文件 copy-resources-->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>src/main/resources</directory>
                                </resource>
                            </resources>
                            <outputDirectory>${thinglinks.package.url}/resources</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--spring boot repackage，依赖 maven-jar-plugin 打包的jar包 重新打包成 spring boot 的jar包-->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.5.5</version>
                <configuration>
                    <!--重写包含依赖，包含不存在的依赖，jar里没有pom里的依赖-->
                    <includes>
                        <include>
                            <groupId>null</groupId>
                            <artifactId>null</artifactId>
                        </include>
                    </includes>
                    <layout>ZIP</layout>
                    <!--使用外部配置文件，jar包里没有资源文件-->
                    <addResources>true</addResources>
                    <outputDirectory>${thinglinks.package.url}</outputDirectory>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <!--配置jar包特殊标识 配置后，保留原文件，生成新文件 *-run.jar -->
                            <!--配置jar包特殊标识 不配置，原文件命名为 *.jar.original，生成新文件 *.jar -->
                            <!--<classifier>run</classifier>-->
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>